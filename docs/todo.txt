better checking for commutative, taking into account what the code would be if swapping order with lets

debug features to add:
	gather rest of program
	show context values
	verbose literate mode (and/or print tree) (with arg names, types, desc, indentation)
	see parse tree
	better op not found error message (show arg types) (hard because memoize of arg types is lazy)
	could support parenthesis that do nothing but cause error if parse isn't as expected
	could support naming vars to not need DeBruijn indices in lit

maybe (2 possible versions, one that acts like id, one that acts like Nothing)
either instead of bool/maybe?

" " instead of "\n" in auto map inner separator

should have dependency bounds for dlist/etc (in cabal file?).

auto input types (for command line args, essentially read show form of any type, even tuples)

"non empty list" for many [VT] for type safer haskell implementation of static analysis

multipage quickref (coerce, base modes, etc) https://stackoverflow.com/questions/1664049/can-i-force-a-page-break-in-html-printing

website design art

infinity / handling div 0 errors/etc.

bounded integers/list size for more efficient math ops and no need for maybe on some list ops

interpreter in addition to compiler (auto build it?)

float/big decimal
