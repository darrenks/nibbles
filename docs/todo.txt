clarify fn0/etc (num rets)
fold on prefixes (primo)

For alpha release:
-make sure handle type pair everywhere in Polylib and elsewhere (i.e. take first before operating)
	-but should it default to using first or both?
-more extensions

debug features to add:
	gather rest of program
	show context values
	verbose literate mode (and/or print tree) (with arg names, types, desc, indentation)
	see parse tree

minor things:
-maybe
-use of char (and instances to convert for vec)


------------------------------------------
compile with wall on? nah, but incomplete patterns would be most useful
should also have dependency bounds for dlist/etc.
-------------------------------
auto input types (for command line args, use delims for list of ints)
library reference?

non empty list for many [VT]

fyi instead of coerce in user fn, could skip it in context lookup

for multipage quickref (coerce, etc)
https://stackoverflow.com/questions/1664049/can-i-force-a-page-break-in-html-printing

website design art

ParseError in parse instead of regular (need refactor to monad)

better op not found error message (hard because memoize of arg types is lazy)

either instead of bool/maybe
maybe id, maybe nothing
handle div 0 errors/etc
infinity, iden init val

index/prev in loop

more extensions
	communitive extensions

quickref to show return types

switch to integer and char everywhere
bounded integers/list size for more efficient math ops and no need for maybe on some list ops
could support parenthesis that do nothing but cause error if parse isn't as expected
also could support named lambdas/assignments that get converted into debruijns
interpret instead of compile
